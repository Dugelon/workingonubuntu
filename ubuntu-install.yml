- hosts: localhost
  become: true
  tasks:
 
  #- name: Remove unwanted packages before upgrades
  #  apt:
  #    name: "{{ packages_remove }}"
  #    state: absent
  #  vars:
  #    packages_remove:
  #    - xyz
 
  # - name : Add specified repository into sources list.
  #   apt_repository:
  #     repo: ppa:xyz/xyz
  #     state: present

  - name: Apt-get Update
    apt:
      update_cache: yes

  - name: Upgrade all packages to the latest version
    apt:
      name: "*"
      state: latest   
  
  - name: Update all packages to the latest version
    apt:
      upgrade: dist

  - name: Install all the packages that we need or want
    apt:
      name: "{{ packages_install }}"
    vars:
      packages_install:
      - aptitude
      - htop
      - ncdu
      - gnome-tweak-tool
      - vlc
      - tmux
      - nmap
      - ubuntu-restricted-extras
      - gparted
      - filezilla
      - python3-pip
      - remmina
      - flameshot

      
  - name: Install Docker Prerequisites because we will need it!
    apt:
      name: "{{ packages_install_docker }}"
    vars:
      packages_install_docker:
      - apt-transport-https
      - ca-certificates
      - curl 
      - gnupg-agent 
      - software-properties-common

  - name: Add Docker apt key
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Install CLAMAV to satisfy the safety officers!
    apt:
      name: "{{ packages_clamav }}"
    vars:
      packages_clamav:
      - clamav
      - clamav-daemon
      - clamav-freshclam
      - clamtk

  - name: Install FortiClient so we can connect to our corporate network
    shell: |
        wget -O - https://repo.fortinet.com/repo/6.4/ubuntu/DEB-GPG-KEY | sudo apt-key add -
        echo "deb [arch=amd64] https://repo.fortinet.com/repo/6.4/ubuntu/ /bionic multiverse" | sudo tee -a /etc/apt/sources.list > /dev/null
        sudo apt-get update && sudo apt-get install forticlient


  - name: Install Visual Studio code because we love it!
    snap:
      name: code
      classic: yes
      
  - name: Install Spotify because we need to work with music!
    snap:
      name: spotify
      
  - name: Install Kubectl because it's the life!
    snap:
      name: kubectl
      classic: yes

  - name: Install MicroK8s because we like that!
    snap:
      name: microk8s
      classic: yes
      
  - name: Laptop and Gnome Tweaks
    shell: |
      gsettings set org.gnome.shell.extensions.dash-to-dock dash-max-icon-size
      gsettings set org.gnome.shell.extensions.dash-to-dock click-action 'minimize'
      

  - name: Download and Install Microsoft Teams to talk with our lovely customers and friends!
    shell: |
      wget -P /tmp/ https://packages.microsoft.com/repos/ms-teams/pool/main/t/teams/teams_1.4.00.4855_amd64.deb
      sudo apt install /tmp/teams*.deb

  - name: Install Helm!
    shell: |
      curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
      helm repo add stable https://kubernetes-charts.storage.googleapis.com/
      helm repo update
   
  #Manually force bionic because at this time no release for eoane
  - name: Install Docker!
    shell: |
      sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
      sudo apt-get update
      sudo apt-get install docker-ce docker-ce-cli containerd.io -y
      sudo usermod -a -G docker $USER
      sudo systemctl disable docker
  
  - name: Grant microk8s access to our user
    shell: |  
      sudo usermod -a -G microk8s $USER
      sudo snap disable microk8s
      
  - name: GNew document right click
    shell: |  
      touch ~/Templates/"Untitled Document"

  - name: Tune our .bashrc file with aliases and other good stuff!
    blockinfile:
      path: ~/.bashrc
      block: |
        alias ll='ls -alF'
        alias la='ls -A'
        alias l='ls -CF'
        alias gigit='git add . && git commit -m "updated by me because I miaou" && git push'
        alias upup='sudo apt-get update && sudo apt-get upgrade -y && sudo apt-get dist-upgrade -y && sudo apt-get autoremove --purge -y'
        alias k=kubectl
        source <(kubectl completion bash)
        complete -F __start_kubectl k

  - name: Tune our user experience!
    shell: |  
      helm completion bash
      source <(helm completion bash)
